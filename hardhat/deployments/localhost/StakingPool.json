{
  "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdateTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "rewardEarned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerTokenStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "stakeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "staked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRewardPerTokenPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2faa94750d7c692c40cceca26f53d04e1f01daa8118499446f4cdfce16cb1ea6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
    "transactionIndex": 0,
    "gasUsed": "495928",
    "logsBloom": "0x
    "blockHash": "0xee81237bd64c04f1c0915379f3b56cccc9f4f8431b39babfbd8611b3d0a6f5a2",
    "transactionHash": "0x2faa94750d7c692c40cceca26f53d04e1f01daa8118499446f4cdfce16cb1ea6",
    "logs": [],
    "blockNumber": 14,
    "cumulativeGasUsed": "495928",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "0x0165878A594ca255338adfa4d48449f69242Eb8F"
  ],
  "numDeployments": 1,
  "solcInputHash": "16aecfdc98be1463c9a88d7a0b2dc0f1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"rewardEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"stakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"rewardEarned(address)\":{\"details\":\"- to calculate the earned rewards for a user based on the amount of tokens staked\",\"params\":{\"_account\":\"- the address of the user\"},\"returns\":{\"_0\":\"uint256 - the amount of rewards earned\"}},\"rewardPerToken()\":{\"details\":\"- To calculuate the amount of rewards per token staked\",\"returns\":{\"_0\":\"uint256 - The amount of rewards per token staked\"}},\"stakeToken(uint256,address)\":{\"details\":\"- to stake tokens into the pool\",\"params\":{\"_amount\":\"- the amount of tokens to stake\"}},\"withdrawToken(uint256,address)\":{\"details\":\"- to withdraw tokens from the pool\",\"params\":{\"_amount\":\"- the amount of tokens to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/StakingPool.sol\":\"StakingPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/StakingPool.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\n\\ncontract StakingPool {\\n    IERC20 public rewardToken;\\n    IERC20 public stakingToken;\\n    uint256 private _totalSupply;\\n    uint256 public rewardRate = 100;\\n    uint256 public lastUpdateTime;\\n    uint256 public rewardPerTokenStored;\\n\\n    mapping(address => uint256) public rewards;\\n    mapping(address => uint256) public userRewardPerTokenPaid;\\n    mapping(address => uint256) public staked;\\n\\n    /// @dev - modifier that will calculate the amount of rewards earned and add it to the rewards mapping\\n    modifier updateReward(address _account) {\\n        rewardPerTokenStored = rewardPerToken();\\n        lastUpdateTime = block.timestamp;\\n        rewards[_account] = rewardEarned(_account);\\n        userRewardPerTokenPaid[_account] = rewardPerTokenStored;\\n        _;\\n    }\\n\\n    constructor(address _stakingToken, address _rewardToken) {\\n        stakingToken = IERC20(_stakingToken);\\n        rewardToken = IERC20(_rewardToken);\\n    }\\n\\n    /// @dev - to stake tokens into the pool\\n    /// @param _amount - the amount of tokens to stake\\n    function stakeToken(\\n        uint256 _amount,\\n        address _user\\n    ) external updateReward(_user) {\\n        require(_amount > 0, \\\"Cannot stake 0 tokens\\\");\\n        _totalSupply += _amount;\\n        staked[_user] += _amount;\\n    }\\n\\n    /// @dev - to withdraw tokens from the pool\\n    /// @param _amount - the amount of tokens to withdraw\\n    function withdrawToken(\\n        uint256 _amount,\\n        address _user\\n    ) external updateReward(_user) {\\n        require(_amount > 0, \\\"Cannot withdraw 0 tokens\\\");\\n        _totalSupply -= _amount;\\n        staked[_user] -= _amount;\\n    }\\n\\n    /// @dev - To calculuate the amount of rewards per token staked\\n    /// @return uint256 - The amount of rewards per token staked\\n    function rewardPerToken() public view returns (uint256) {\\n        if (_totalSupply == 0) {\\n            return rewardPerTokenStored;\\n        }\\n\\n        return\\n            rewardPerTokenStored +\\n            (((block.timestamp - lastUpdateTime) * rewardRate * 1e18) /\\n                _totalSupply);\\n    }\\n\\n    function getStakedAmount(address _user) public view returns (uint256) {\\n        return staked[_user];\\n    }\\n\\n    /**\\n     * @dev - to calculate the earned rewards for a user based on the amount of tokens staked\\n     * @param _account - the address of the user\\n     * @return uint256 - the amount of rewards earned\\n     */\\n\\n    function rewardEarned(address _account) public view returns (uint256) {\\n        return\\n            ((staked[_account] *\\n                (rewardPerToken() - userRewardPerTokenPaid[_account])) / 1e18) +\\n            rewards[_account];\\n    }\\n\\n    function claimReward(address _user) external updateReward(msg.sender) {\\n        uint256 reward = rewards[_user];\\n\\n        rewards[_user] = 0;\\n        rewardToken.transfer(_user, reward);\\n    }\\n}\\n\",\"keccak256\":\"0x9745ff3f2d408c39cef9bba43da6e968b492c67fad01503abe2c12a9b7b319ef\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function balanceOf(address _owner) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x239f47b2f966a01ac0f60503dec17b3d50e7bd5aaaea4f3fe8c79909d9da3f90\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x6080604052606460035534801561001557600080fd5b5060405161078138038061078183398101604081905261003491610081565b600180546001600160a01b039384166001600160a01b031991821617909155600080549290931691161790556100b4565b80516001600160a01b038116811461007c57600080fd5b919050565b6000806040838503121561009457600080fd5b61009d83610065565b91506100ab60208401610065565b90509250929050565b6106be806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639ee306001161008c578063cd3daf9d11610066578063cd3daf9d14610203578063d279c1911461020b578063df136d651461021e578063f7c618c11461022757600080fd5b80639ee30600146101d2578063be4b1772146101e7578063c8f33c91146101fa57600080fd5b806372f702f3116100c857806372f702f31461015e5780637b0a47ee146101895780638b8763471461019257806398807d84146101b257600080fd5b80630700037d146100ef57806316ba6bf3146101225780634da6a55614610135575b600080fd5b61010f6100fd3660046105a3565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b61010f6101303660046105a3565b61023a565b61010f6101433660046105a3565b6001600160a01b031660009081526008602052604090205490565b600154610171906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b61010f60035481565b61010f6101a03660046105a3565b60076020526000908152604090205481565b61010f6101c03660046105a3565b60086020526000908152604090205481565b6101e56101e03660046105c5565b6102b7565b005b6101e56101f53660046105c5565b61038e565b61010f60045481565b61010f61045e565b6101e56102193660046105a3565b6104bc565b61010f60055481565b600054610171906001600160a01b031681565b6001600160a01b0381166000908152600660209081526040808320546007909252822054670de0b6b3a76400009061027061045e565b61027a9190610607565b6001600160a01b03851660009081526008602052604090205461029d919061061a565b6102a79190610631565b6102b19190610653565b92915050565b806102c061045e565b600555426004556102d08161023a565b6001600160a01b038216600090815260066020908152604080832093909355600554600790915291902055826103455760405162461bcd60e51b815260206004820152601560248201527443616e6e6f74207374616b65203020746f6b656e7360581b60448201526064015b60405180910390fd5b82600260008282546103579190610653565b90915550506001600160a01b03821660009081526008602052604081208054859290610384908490610653565b9091555050505050565b8061039761045e565b600555426004556103a78161023a565b6001600160a01b0382166000908152600660209081526040808320939093556005546007909152919020558261041f5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f74207769746864726177203020746f6b656e730000000000000000604482015260640161033c565b82600260008282546104319190610607565b90915550506001600160a01b03821660009081526008602052604081208054859290610384908490610607565b6000600254600003610471575060055490565b6002546003546004546104849042610607565b61048e919061061a565b6104a090670de0b6b3a764000061061a565b6104aa9190610631565b6005546104b79190610653565b905090565b336104c561045e565b600555426004556104d58161023a565b6001600160a01b0382811660009081526006602081815260408084209590955560055460078252858420558684168084529190528382208054908390559154935163a9059cbb60e01b815260048101919091526024810182905290929091169063a9059cbb906044016020604051808303816000875af115801561055d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105819190610666565b50505050565b80356001600160a01b038116811461059e57600080fd5b919050565b6000602082840312156105b557600080fd5b6105be82610587565b9392505050565b600080604083850312156105d857600080fd5b823591506105e860208401610587565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102b1576102b16105f1565b80820281158282048414176102b1576102b16105f1565b60008261064e57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156102b1576102b16105f1565b60006020828403121561067857600080fd5b815180151581146105be57600080fdfea2646970667358221220a47471e2c263be86b20eb545e14921b312c1928241497ac76eec03acddffd89e64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639ee306001161008c578063cd3daf9d11610066578063cd3daf9d14610203578063d279c1911461020b578063df136d651461021e578063f7c618c11461022757600080fd5b80639ee30600146101d2578063be4b1772146101e7578063c8f33c91146101fa57600080fd5b806372f702f3116100c857806372f702f31461015e5780637b0a47ee146101895780638b8763471461019257806398807d84146101b257600080fd5b80630700037d146100ef57806316ba6bf3146101225780634da6a55614610135575b600080fd5b61010f6100fd3660046105a3565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b61010f6101303660046105a3565b61023a565b61010f6101433660046105a3565b6001600160a01b031660009081526008602052604090205490565b600154610171906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b61010f60035481565b61010f6101a03660046105a3565b60076020526000908152604090205481565b61010f6101c03660046105a3565b60086020526000908152604090205481565b6101e56101e03660046105c5565b6102b7565b005b6101e56101f53660046105c5565b61038e565b61010f60045481565b61010f61045e565b6101e56102193660046105a3565b6104bc565b61010f60055481565b600054610171906001600160a01b031681565b6001600160a01b0381166000908152600660209081526040808320546007909252822054670de0b6b3a76400009061027061045e565b61027a9190610607565b6001600160a01b03851660009081526008602052604090205461029d919061061a565b6102a79190610631565b6102b19190610653565b92915050565b806102c061045e565b600555426004556102d08161023a565b6001600160a01b038216600090815260066020908152604080832093909355600554600790915291902055826103455760405162461bcd60e51b815260206004820152601560248201527443616e6e6f74207374616b65203020746f6b656e7360581b60448201526064015b60405180910390fd5b82600260008282546103579190610653565b90915550506001600160a01b03821660009081526008602052604081208054859290610384908490610653565b9091555050505050565b8061039761045e565b600555426004556103a78161023a565b6001600160a01b0382166000908152600660209081526040808320939093556005546007909152919020558261041f5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f74207769746864726177203020746f6b656e730000000000000000604482015260640161033c565b82600260008282546104319190610607565b90915550506001600160a01b03821660009081526008602052604081208054859290610384908490610607565b6000600254600003610471575060055490565b6002546003546004546104849042610607565b61048e919061061a565b6104a090670de0b6b3a764000061061a565b6104aa9190610631565b6005546104b79190610653565b905090565b336104c561045e565b600555426004556104d58161023a565b6001600160a01b0382811660009081526006602081815260408084209590955560055460078252858420558684168084529190528382208054908390559154935163a9059cbb60e01b815260048101919091526024810182905290929091169063a9059cbb906044016020604051808303816000875af115801561055d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105819190610666565b50505050565b80356001600160a01b038116811461059e57600080fd5b919050565b6000602082840312156105b557600080fd5b6105be82610587565b9392505050565b600080604083850312156105d857600080fd5b823591506105e860208401610587565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102b1576102b16105f1565b80820281158282048414176102b1576102b16105f1565b60008261064e57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156102b1576102b16105f1565b60006020828403121561067857600080fd5b815180151581146105be57600080fdfea2646970667358221220a47471e2c263be86b20eb545e14921b312c1928241497ac76eec03acddffd89e64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "rewardEarned(address)": {
        "details": "- to calculate the earned rewards for a user based on the amount of tokens staked",
        "params": {
          "_account": "- the address of the user"
        },
        "returns": {
          "_0": "uint256 - the amount of rewards earned"
        }
      },
      "rewardPerToken()": {
        "details": "- To calculuate the amount of rewards per token staked",
        "returns": {
          "_0": "uint256 - The amount of rewards per token staked"
        }
      },
      "stakeToken(uint256,address)": {
        "details": "- to stake tokens into the pool",
        "params": {
          "_amount": "- the amount of tokens to stake"
        }
      },
      "withdrawToken(uint256,address)": {
        "details": "- to withdraw tokens from the pool",
        "params": {
          "_amount": "- the amount of tokens to withdraw"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1668,
        "contract": "contracts/core/StakingPool.sol:StakingPool",
        "label": "rewardToken",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)4288"
      },
      {
        "astId": 1671,
        "contract": "contracts/core/StakingPool.sol:StakingPool",
        "label": "stakingToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)4288"
      },
      {
        "astId": 1673,
        "contract": "contracts/core/StakingPool.sol:StakingPool",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1676,
        "contract": "contracts/core/StakingPool.sol:StakingPool",
        "label": "rewardRate",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1678,
        "contract": "contracts/core/StakingPool.sol:StakingPool",
        "label": "lastUpdateTime",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1680,
        "contract": "contracts/core/StakingPool.sol:StakingPool",
        "label": "rewardPerTokenStored",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1684,
        "contract": "contracts/core/StakingPool.sol:StakingPool",
        "label": "rewards",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1688,
        "contract": "contracts/core/StakingPool.sol:StakingPool",
        "label": "userRewardPerTokenPaid",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1692,
        "contract": "contracts/core/StakingPool.sol:StakingPool",
        "label": "staked",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)4288": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}