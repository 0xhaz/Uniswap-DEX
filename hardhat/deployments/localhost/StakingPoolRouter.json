{
  "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rtoken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sToken",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getRewardEarned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "redeemReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeemRewardETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rtoken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x321ae365055add561d281388c39f0789a784ba69b9f4bc929559153eb88568af",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
    "transactionIndex": 0,
    "gasUsed": "884848",
    "logsBloom": "0x
    "blockHash": "0xec7fc8733605c862ea0c74be4840d2dc0c54e0402372ff4c92020db94af7dabc",
    "transactionHash": "0x321ae365055add561d281388c39f0789a784ba69b9f4bc929559153eb88568af",
    "logs": [],
    "blockNumber": 19,
    "cumulativeGasUsed": "884848",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
    "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "0x0165878A594ca255338adfa4d48449f69242Eb8F"
  ],
  "numDeployments": 1,
  "solcInputHash": "6069f0ce71a9608c17dcdffeea496903",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rtoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sToken\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRewardEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"redeemReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemRewardETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/router/StakingPoolRouter.sol\":\"StakingPoolRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function balanceOf(address _owner) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x239f47b2f966a01ac0f60503dec17b3d50e7bd5aaaea4f3fe8c79909d9da3f90\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IStakingPool.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IStakingPool {\\n    function staked(address _user) external view returns (uint256);\\n\\n    function earned(address _user) external view returns (uint256);\\n\\n    function stake(uint256 _amount, address _account) external;\\n\\n    function withdraw(uint256 _amount, address _account) external;\\n\\n    function rewards(address _user) external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function rewardPerToken() external view returns (uint256);\\n\\n    function redeemReward(address _user) external;\\n}\\n\",\"keccak256\":\"0x37c3f4a0e9a0e48e3f8e6d3d0dadbe07ce0f6459f3a3fd7b5c82c6b5402cefd6\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IStakingPoolFactory {\\n    function getPool(address _token) external view returns (address);\\n\\n    function allPools() external view returns (address[] memory);\\n\\n    function allPoolsLength() external view returns (uint256);\\n\\n    function createPool(\\n        address _token0,\\n        address _token1\\n    ) external returns (address);\\n}\\n\",\"keccak256\":\"0x0a98b2ce9dff0f7762f7c8250196504fc6f6f65bcfab22e6479a952fd7b340be\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IWETH {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Deposit(address indexed account, uint256 amount);\\n    event Withdrawal(address indexed account, uint256 amount);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address _owner) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x9c7c54a21c523011d772b7ddf932f95f5d70a7b10d4e755e13b049d51ad05c8b\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nlibrary TransferHelper {\\n    function safeApprove(address token, address to, uint256 value) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x095ea7b3, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: APPROVE_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransfer(address token, address to, uint256 value) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0xa9059cbb, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: TRANSFER_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: TRANSFER_FROM_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper: ETH_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x98073686d89bc283e6e98950435f46ae368af757a1cbe819b2e9a10ef077d174\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/router/StakingPoolRouter.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nimport \\\"../interfaces/IStakingPool.sol\\\";\\nimport \\\"../interfaces/IStakingPoolFactory.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/TransferHelper.sol\\\";\\n\\ncontract StakingPoolRouter {\\n    address public immutable factory;\\n    address public immutable WETH;\\n    address public immutable rtoken;\\n\\n    constructor(address _factory, address _WETH, address _rtoken) {\\n        factory = _factory;\\n        WETH = _WETH;\\n        rtoken = _rtoken;\\n    }\\n\\n    function getPoolAddress(address _token) public view returns (address pool) {\\n        pool = IStakingPoolFactory(factory).getPool(_token);\\n    }\\n\\n    function getBalance(address _token) public view returns (uint256 balance) {\\n        balance = IERC20(_token).balanceOf(address(this));\\n    }\\n\\n    function createPool(address sToken) public {\\n        address pool = getPoolAddress(sToken);\\n        require(pool == address(0), \\\"POOL_EXISTS\\\");\\n\\n        IStakingPoolFactory(factory).createPool(sToken, rtoken);\\n    }\\n\\n    function getRewardEarned(\\n        address _token,\\n        address _user\\n    ) public view returns (uint256 rewardAmount) {\\n        address pool = getPoolAddress(_token);\\n\\n        rewardAmount = IStakingPool(pool).rewards(_user);\\n    }\\n\\n    function getStaked(\\n        address _user,\\n        address _token\\n    ) public view returns (uint256 stakedAmount) {\\n        address pool = getPoolAddress(_token);\\n\\n        stakedAmount = IStakingPool(pool).staked(_user);\\n    }\\n\\n    function stake(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n\\n        if (pool != address(0)) {\\n            IStakingPool(pool).stake(_amount, msg.sender);\\n        } else {\\n            createPool(_token);\\n            IStakingPool(pool).stake(_amount, msg.sender);\\n        }\\n    }\\n\\n    function withdraw(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"POOL_NOT_EXISTS\\\");\\n\\n        uint256 stakedAmount = getStaked(msg.sender, _token);\\n        require(stakedAmount >= _amount, \\\"INSUFFICIENT_STAKED_AMOUNT\\\");\\n\\n        IStakingPool(pool).withdraw(_amount, msg.sender);\\n    }\\n\\n    function redeemReward(address _token) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"POOL_NOT_EXISTS\\\");\\n\\n        uint256 rewardAmount = getRewardEarned(_token, msg.sender);\\n        require(rewardAmount > 0, \\\"NO_REWARD_TO_REDEEM\\\");\\n\\n        IStakingPool(pool).redeemReward(msg.sender);\\n    }\\n\\n    function stakeETH(uint256 _amount) public payable {\\n        require(msg.value == _amount, \\\"INVALID_AMOUNT\\\");\\n\\n        IWETH(WETH).deposit{value: msg.value}();\\n        TransferHelper.safeTransfer(WETH, msg.sender, _amount);\\n\\n        stake(WETH, _amount);\\n    }\\n\\n    function withdrawETH(uint256 _amount) public {\\n        withdraw(WETH, _amount);\\n\\n        TransferHelper.safeTransferFrom(\\n            WETH,\\n            msg.sender,\\n            address(this),\\n            _amount\\n        );\\n\\n        IWETH(WETH).withdraw(_amount);\\n\\n        TransferHelper.safeTransferETH(msg.sender, _amount);\\n    }\\n\\n    function redeemRewardETH() public {\\n        redeemReward(WETH);\\n    }\\n}\\n\",\"keccak256\":\"0x08b88110405b6e5ada94c6478173d2e7dc1aca12480a519539a098a0f4887a59\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c8063b33bfa7c1161007f578063f14210a611610059578063f14210a614610273578063f379dfd014610293578063f3fef3a3146102b3578063f8b2cb4f146102d357600080fd5b8063b33bfa7c146101fc578063c45a015514610211578063df2a26e91461024557600080fd5b80639049f9d2116100bb5780639049f9d214610168578063ad5c464814610188578063adc9772e146101bc578063b286de76146101dc57600080fd5b80631228cbee146100e25780636845478f1461011f5780636ecc20da14610153575b600080fd5b3480156100ee57600080fd5b506101026100fd366004610da8565b6102f3565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012b57600080fd5b506101027f000000000000000000000000000000000000000000000000000000000000000081565b610166610161366004610dcc565b610388565b005b34801561017457600080fd5b50610166610183366004610da8565b610499565b34801561019457600080fd5b506101027f000000000000000000000000000000000000000000000000000000000000000081565b3480156101c857600080fd5b506101666101d7366004610de5565b6105a4565b3480156101e857600080fd5b506101666101f7366004610da8565b610662565b34801561020857600080fd5b50610166610737565b34801561021d57600080fd5b506101027f000000000000000000000000000000000000000000000000000000000000000081565b34801561025157600080fd5b50610265610260366004610e11565b610762565b604051908152602001610116565b34801561027f57600080fd5b5061016661028e366004610dcc565b6107e5565b34801561029f57600080fd5b506102656102ae366004610e11565b6108bf565b3480156102bf57600080fd5b506101666102ce366004610de5565b6108fd565b3480156102df57600080fd5b506102656102ee366004610da8565b610a14565b60405163bbe4f6db60e01b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063bbe4f6db90602401602060405180830381865afa15801561035e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103829190610e4a565b92915050565b8034146103cd5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b505050505061046c7f00000000000000000000000000000000000000000000000000000000000000003383610a7f565b6104967f0000000000000000000000000000000000000000000000000000000000000000826105a4565b50565b60006104a4826102f3565b90506001600160a01b038116156104eb5760405162461bcd60e51b815260206004820152600b60248201526a504f4f4c5f45584953545360a81b60448201526064016103c4565b60405163e343361560e01b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063e3433615906044016020604051808303816000875af115801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f9190610e4a565b505050565b60006105af836102f3565b90506001600160a01b0381161561062657604051637acb775760e01b8152600481018390523360248201526001600160a01b03821690637acb7757906044015b600060405180830381600087803b15801561060957600080fd5b505af115801561061d573d6000803e3d6000fd5b50505050505050565b61062f83610499565b604051637acb775760e01b8152600481018390523360248201526001600160a01b03821690637acb7757906044016105ef565b600061066d826102f3565b90506001600160a01b0381166106b75760405162461bcd60e51b815260206004820152600f60248201526e504f4f4c5f4e4f545f45584953545360881b60448201526064016103c4565b60006106c38333610762565b90506000811161070b5760405162461bcd60e51b81526020600482015260136024820152724e4f5f5245574152445f544f5f52454445454d60681b60448201526064016103c4565b6040516359436f3b60e11b81523360048201526001600160a01b0383169063b286de76906024016105ef565b6107607f0000000000000000000000000000000000000000000000000000000000000000610662565b565b60008061076e846102f3565b604051630700037d60e01b81526001600160a01b03858116600483015291925090821690630700037d906024015b602060405180830381865afa1580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd9190610e67565b949350505050565b61080f7f0000000000000000000000000000000000000000000000000000000000000000826108fd565b61083b7f0000000000000000000000000000000000000000000000000000000000000000333084610b9a565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561089d57600080fd5b505af11580156108b1573d6000803e3d6000fd5b505050506104963382610cca565b6000806108cb836102f3565b6040516326201f6160e21b81526001600160a01b038681166004830152919250908216906398807d849060240161079c565b6000610908836102f3565b90506001600160a01b0381166109525760405162461bcd60e51b815260206004820152600f60248201526e504f4f4c5f4e4f545f45584953545360881b60448201526064016103c4565b600061095e33856108bf565b9050828110156109b05760405162461bcd60e51b815260206004820152601a60248201527f494e53554646494349454e545f5354414b45445f414d4f554e5400000000000060448201526064016103c4565b604051627b8a6760e11b8152600481018490523360248201526001600160a01b0383169062f714ce90604401600060405180830381600087803b1580156109f657600080fd5b505af1158015610a0a573d6000803e3d6000fd5b5050505050505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610a5b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103829190610e67565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610adb9190610e80565b6000604051808303816000865af19150503d8060008114610b18576040519150601f19603f3d011682016040523d82523d6000602084013e610b1d565b606091505b5091509150818015610b47575080511580610b47575080806020019051810190610b479190610eaf565b610b935760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c45440060448201526064016103c4565b5050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610bfe9190610e80565b6000604051808303816000865af19150503d8060008114610c3b576040519150601f19603f3d011682016040523d82523d6000602084013e610c40565b606091505b5091509150818015610c6a575080511580610c6a575080806020019051810190610c6a9190610eaf565b610cc25760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b60648201526084016103c4565b505050505050565b604080516000808252602082019092526001600160a01b038416908390604051610cf49190610e80565b60006040518083038185875af1925050503d8060008114610d31576040519150601f19603f3d011682016040523d82523d6000602084013e610d36565b606091505b505090508061059f5760405162461bcd60e51b815260206004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201526213115160ea1b60648201526084016103c4565b6001600160a01b038116811461049657600080fd5b600060208284031215610dba57600080fd5b8135610dc581610d93565b9392505050565b600060208284031215610dde57600080fd5b5035919050565b60008060408385031215610df857600080fd5b8235610e0381610d93565b946020939093013593505050565b60008060408385031215610e2457600080fd5b8235610e2f81610d93565b91506020830135610e3f81610d93565b809150509250929050565b600060208284031215610e5c57600080fd5b8151610dc581610d93565b600060208284031215610e7957600080fd5b5051919050565b6000825160005b81811015610ea15760208186018101518583015201610e87565b506000920191825250919050565b600060208284031215610ec157600080fd5b81518015158114610dc557600080fdfea264697066735822122085d68e9cc0a2ccbcbdf1bf517ebbb71687ac079a0d6ffe32d94eecd85988d73664736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}