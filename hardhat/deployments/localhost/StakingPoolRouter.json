{
  "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rtoken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sToken",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "estimateAPYForPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getETHBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getRewardEarned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "redeemReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeemRewardETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rtoken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakedETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xeb6ca721bc8308a8a56c22db28aed96f2f92348546caa0c72126f2f5376b86a6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
    "transactionIndex": 0,
    "gasUsed": "1076204",
    "logsBloom": "0x
    "blockHash": "0x630d771f366cd40397e6ec14304a58dd18ef14820d70e3c8c92f68c35076305d",
    "transactionHash": "0xeb6ca721bc8308a8a56c22db28aed96f2f92348546caa0c72126f2f5376b86a6",
    "logs": [],
    "blockNumber": 16,
    "cumulativeGasUsed": "1076204",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9A676e781A523b5d0C0e43731313A708CB607508",
    "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "0x0165878A594ca255338adfa4d48449f69242Eb8F"
  ],
  "numDeployments": 1,
  "solcInputHash": "ba193ebc812ae7cb80afca5f7fc7624f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rtoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sToken\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"estimateAPYForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getETHBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRewardEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"redeemReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemRewardETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/router/StakingPoolRouter.sol\":\"StakingPoolRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function balanceOf(address _owner) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x239f47b2f966a01ac0f60503dec17b3d50e7bd5aaaea4f3fe8c79909d9da3f90\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IStakingPool.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IStakingPool {\\n    function rewardEarned(address _user) external view returns (uint256);\\n\\n    function stakeToken(uint256 _amount, address _account) external;\\n\\n    function withdrawToken(uint256 _amount, address _account) external;\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function rewardPerToken() external view returns (uint256);\\n\\n    function redeemReward(address _user) external;\\n\\n    function lastUpdateTime() external view returns (uint256);\\n\\n    function getStakedAmount(address _user) external view returns (uint256);\\n\\n    function claimReward(address _user) external;\\n}\\n\",\"keccak256\":\"0xc87ba0483fbf26be9dd9ffa910d4748c87d956f47fd8b67832b0460a83b705a0\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IStakingPoolFactory {\\n    function getPool(address _token) external view returns (address);\\n\\n    function allPools() external view returns (address[] memory);\\n\\n    function allPoolsLength() external view returns (uint256);\\n\\n    function createPool(\\n        address _token0,\\n        address _token1\\n    ) external returns (address);\\n}\\n\",\"keccak256\":\"0x0a98b2ce9dff0f7762f7c8250196504fc6f6f65bcfab22e6479a952fd7b340be\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IWETH {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Deposit(address indexed account, uint256 amount);\\n    event Withdrawal(address indexed account, uint256 amount);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address _owner) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x9c7c54a21c523011d772b7ddf932f95f5d70a7b10d4e755e13b049d51ad05c8b\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nlibrary TransferHelper {\\n    function safeApprove(address token, address to, uint256 value) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x095ea7b3, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: APPROVE_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransfer(address token, address to, uint256 value) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0xa9059cbb, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: TRANSFER_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: TRANSFER_FROM_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper: ETH_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x98073686d89bc283e6e98950435f46ae368af757a1cbe819b2e9a10ef077d174\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/router/StakingPoolRouter.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nimport \\\"../interfaces/IStakingPool.sol\\\";\\nimport \\\"../interfaces/IStakingPoolFactory.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/TransferHelper.sol\\\";\\n\\ncontract StakingPoolRouter {\\n    address public immutable factory;\\n    address public immutable WETH;\\n    address public immutable rtoken;\\n\\n    mapping(address => uint256) public getETHBalance;\\n    mapping(address => uint256) public stakedETH;\\n\\n    constructor(address _factory, address _WETH, address _rtoken) {\\n        factory = _factory;\\n        WETH = _WETH;\\n        rtoken = _rtoken;\\n    }\\n\\n    function createPool(address sToken) public {\\n        address pool = getPoolAddress(sToken);\\n        require(pool == address(0), \\\"POOL_EXISTS\\\");\\n\\n        IStakingPoolFactory(factory).createPool(sToken, rtoken);\\n    }\\n\\n    function getRewardEarned(\\n        address _token,\\n        address _user\\n    ) public view returns (uint256 rewardAmount) {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"POOL_NOT_EXISTS\\\");\\n\\n        rewardAmount = IStakingPool(pool).rewardEarned(_user);\\n    }\\n\\n    function getStaked(\\n        address _user,\\n        address _token\\n    ) public view returns (uint256 stakedAmount) {\\n        address pool = getPoolAddress(_token);\\n\\n        stakedAmount = IStakingPool(pool).getStakedAmount(_user);\\n    }\\n\\n    function stake(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n\\n        if (pool == address(0)) {\\n            createPool(_token);\\n            pool = getPoolAddress(_token);\\n        }\\n\\n        require(pool != address(0), \\\"POOL_NOT_EXIST\\\");\\n\\n        TransferHelper.safeTransferFrom(\\n            _token,\\n            msg.sender,\\n            address(this),\\n            _amount\\n        );\\n\\n        IStakingPool(pool).stakeToken(_amount, msg.sender);\\n    }\\n\\n    function withdraw(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"POOL_NOT_EXISTS\\\");\\n\\n        TransferHelper.safeTransfer(_token, msg.sender, _amount);\\n\\n        IStakingPool(pool).withdrawToken(_amount, msg.sender);\\n    }\\n\\n    function redeemReward(address _token) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"POOL_NOT_EXISTS\\\");\\n\\n        uint256 rewardAmount = getRewardEarned(_token, msg.sender);\\n        require(rewardAmount > 0, \\\"NO_REWARD_TO_REDEEM\\\");\\n\\n        IStakingPool(pool).claimReward(msg.sender);\\n    }\\n\\n    function stakeETH(uint256 _amount) public payable {\\n        address pool = getPoolAddress(WETH);\\n\\n        if (pool == address(0)) {\\n            createPool(WETH);\\n            pool = getPoolAddress(WETH);\\n        }\\n\\n        require(pool != address(0), \\\"POOL_NOT_EXIST\\\");\\n        require(_amount > 0, \\\"Must stake more than 0 ether\\\");\\n        require(msg.value >= _amount, \\\"Insufficient Ether sent\\\");\\n\\n        IWETH(WETH).deposit{value: _amount}();\\n        stakedETH[msg.sender] += _amount;\\n\\n        IStakingPool(pool).stakeToken(_amount, msg.sender);\\n    }\\n\\n    function withdrawEth(uint256 _amount) public {\\n        address pool = getPoolAddress(WETH);\\n\\n        require(pool != address(0), \\\"POOL_NOT_EXIST\\\");\\n        require(stakedETH[msg.sender] >= _amount, \\\"Not enough staked Ether\\\");\\n\\n        IStakingPool(pool).withdrawToken(_amount, msg.sender);\\n        stakedETH[msg.sender] -= _amount;\\n\\n        IWETH(WETH).withdraw(_amount);\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\n        require(success, \\\"Ether transfer failed\\\");\\n    }\\n\\n    function redeemRewardETH() public {\\n        redeemReward(WETH);\\n    }\\n\\n    function getPoolAddress(address _token) public view returns (address pool) {\\n        pool = IStakingPoolFactory(factory).getPool(_token);\\n    }\\n\\n    function getBalance(address _token) public view returns (uint256 balance) {\\n        balance = IERC20(_token).balanceOf(address(this));\\n    }\\n\\n    function estimateAPYForPool(address _token) public view returns (uint256) {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"POOL_NOT_EXISTS\\\");\\n\\n        IStakingPool stakingPool = IStakingPool(pool);\\n\\n        uint256 rewardPerToken = stakingPool.rewardPerToken();\\n\\n        uint256 estimatedAPY = (rewardPerToken * 365 days) / 1e18;\\n\\n        return estimatedAPY;\\n    }\\n}\\n\",\"keccak256\":\"0xc8dc2d098cd85e627fc334a95f1fedd1371510956ec85388e873411c3e3b9a37\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7964,
        "contract": "contracts/router/StakingPoolRouter.sol:StakingPoolRouter",
        "label": "getETHBalance",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7968,
        "contract": "contracts/router/StakingPoolRouter.sol:StakingPoolRouter",
        "label": "stakedETH",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}