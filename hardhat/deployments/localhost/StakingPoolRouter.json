{
  "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rtoken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sToken",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getETHBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getRewardEarned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "redeemReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeemRewardETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rtoken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakedETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd51ac7e134c5c5a2f2f80cf7e2753710501ff8371e07475c17181e217dab0cb3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
    "transactionIndex": 0,
    "gasUsed": "989684",
    "logsBloom": "0x
    "blockHash": "0x3c43177d3d3c9331bca248a7d128cf85d05090f831a4878044485d1da0f5a0a2",
    "transactionHash": "0xd51ac7e134c5c5a2f2f80cf7e2753710501ff8371e07475c17181e217dab0cb3",
    "logs": [],
    "blockNumber": 16,
    "cumulativeGasUsed": "989684",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9A676e781A523b5d0C0e43731313A708CB607508",
    "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "0x0165878A594ca255338adfa4d48449f69242Eb8F"
  ],
  "numDeployments": 1,
  "solcInputHash": "362aa40f9de805c30228e09256b409df",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rtoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sToken\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getETHBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRewardEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"redeemReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemRewardETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/router/StakingPoolRouter.sol\":\"StakingPoolRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function balanceOf(address _owner) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x239f47b2f966a01ac0f60503dec17b3d50e7bd5aaaea4f3fe8c79909d9da3f90\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IStakingPool.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IStakingPool {\\n    function rewardEarned(address _user) external view returns (uint256);\\n\\n    function stakeToken(uint256 _amount, address _account) external;\\n\\n    function withdrawToken(uint256 _amount, address _account) external;\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function rewardPerToken() external view returns (uint256);\\n\\n    function redeemReward(address _user) external;\\n\\n    function lastUpdateTime() external view returns (uint256);\\n\\n    function getStakedAmount(address _user) external view returns (uint256);\\n\\n    function claimReward(address _user) external;\\n}\\n\",\"keccak256\":\"0xc87ba0483fbf26be9dd9ffa910d4748c87d956f47fd8b67832b0460a83b705a0\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IStakingPoolFactory {\\n    function getPool(address _token) external view returns (address);\\n\\n    function allPools() external view returns (address[] memory);\\n\\n    function allPoolsLength() external view returns (uint256);\\n\\n    function createPool(\\n        address _token0,\\n        address _token1\\n    ) external returns (address);\\n}\\n\",\"keccak256\":\"0x0a98b2ce9dff0f7762f7c8250196504fc6f6f65bcfab22e6479a952fd7b340be\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IWETH {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Deposit(address indexed account, uint256 amount);\\n    event Withdrawal(address indexed account, uint256 amount);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address _owner) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x9c7c54a21c523011d772b7ddf932f95f5d70a7b10d4e755e13b049d51ad05c8b\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nlibrary TransferHelper {\\n    function safeApprove(address token, address to, uint256 value) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x095ea7b3, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: APPROVE_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransfer(address token, address to, uint256 value) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0xa9059cbb, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: TRANSFER_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: TRANSFER_FROM_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper: ETH_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x98073686d89bc283e6e98950435f46ae368af757a1cbe819b2e9a10ef077d174\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/router/StakingPoolRouter.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nimport \\\"../interfaces/IStakingPool.sol\\\";\\nimport \\\"../interfaces/IStakingPoolFactory.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/TransferHelper.sol\\\";\\n\\ncontract StakingPoolRouter {\\n    address public immutable factory;\\n    address public immutable WETH;\\n    address public immutable rtoken;\\n\\n    mapping(address => uint256) public getETHBalance;\\n    mapping(address => uint256) public stakedETH;\\n\\n    constructor(address _factory, address _WETH, address _rtoken) {\\n        factory = _factory;\\n        WETH = _WETH;\\n        rtoken = _rtoken;\\n    }\\n\\n    function getPoolAddress(address _token) public view returns (address pool) {\\n        pool = IStakingPoolFactory(factory).getPool(_token);\\n    }\\n\\n    function getBalance(address _token) public view returns (uint256 balance) {\\n        balance = IERC20(_token).balanceOf(address(this));\\n    }\\n\\n    function createPool(address sToken) public {\\n        address pool = getPoolAddress(sToken);\\n        require(pool == address(0), \\\"POOL_EXISTS\\\");\\n\\n        IStakingPoolFactory(factory).createPool(sToken, rtoken);\\n    }\\n\\n    function getRewardEarned(\\n        address _token,\\n        address _user\\n    ) public view returns (uint256 rewardAmount) {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"POOL_NOT_EXISTS\\\");\\n\\n        rewardAmount = IStakingPool(pool).rewardEarned(_user);\\n    }\\n\\n    function getStaked(\\n        address _user,\\n        address _token\\n    ) public view returns (uint256 stakedAmount) {\\n        address pool = getPoolAddress(_token);\\n\\n        stakedAmount = IStakingPool(pool).getStakedAmount(_user);\\n    }\\n\\n    function stake(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n\\n        if (pool == address(0)) {\\n            createPool(_token);\\n            pool = getPoolAddress(_token);\\n        }\\n\\n        require(pool != address(0), \\\"POOL_NOT_EXIST\\\");\\n\\n        TransferHelper.safeTransferFrom(\\n            _token,\\n            msg.sender,\\n            address(this),\\n            _amount\\n        );\\n\\n        IStakingPool(pool).stakeToken(_amount, msg.sender);\\n    }\\n\\n    function withdraw(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"POOL_NOT_EXISTS\\\");\\n\\n        TransferHelper.safeTransfer(_token, msg.sender, _amount);\\n\\n        IStakingPool(pool).withdrawToken(_amount, msg.sender);\\n    }\\n\\n    function redeemReward(address _token) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"POOL_NOT_EXISTS\\\");\\n\\n        uint256 rewardAmount = getRewardEarned(_token, msg.sender);\\n        require(rewardAmount > 0, \\\"NO_REWARD_TO_REDEEM\\\");\\n\\n        IStakingPool(pool).claimReward(msg.sender);\\n    }\\n\\n    function stakeETH(uint256 _amount) public payable {\\n        address pool = getPoolAddress(WETH);\\n\\n        require(pool != address(0), \\\"POOL_NOT_EXIST\\\");\\n        require(_amount > 0, \\\"Must stake more than 0 ether\\\");\\n        require(msg.value >= _amount, \\\"Insufficient Ether sent\\\");\\n\\n        IWETH(WETH).deposit{value: _amount}();\\n        stakedETH[msg.sender] += _amount;\\n\\n        IStakingPool(pool).stakeToken(_amount, msg.sender);\\n    }\\n\\n    function withdrawEth(uint256 _amount) public {\\n        address pool = getPoolAddress(WETH);\\n\\n        require(pool != address(0), \\\"POOL_NOT_EXIST\\\");\\n        require(stakedETH[msg.sender] >= _amount, \\\"Not enough staked Ether\\\");\\n\\n        IStakingPool(pool).withdrawToken(_amount, msg.sender);\\n        stakedETH[msg.sender] -= _amount;\\n\\n        IWETH(WETH).withdraw(_amount);\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\n        require(success, \\\"Ether transfer failed\\\");\\n    }\\n\\n    function redeemRewardETH() public {\\n        redeemReward(WETH);\\n    }\\n}\\n\",\"keccak256\":\"0x14b722b22502cc3ad1017aecca979daed25a8255e8066e5de74e7ade8ed2a5bb\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b506040516111fd3803806111fd83398101604081905261002f91610068565b6001600160a01b0392831660805290821660a0521660c0526100ab565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506100946020850161004c565b91506100a26040850161004c565b90509250925092565b60805160a05160c0516110eb610112600039600081816101820152610663015260008181610218015281816103ff015281816104f60152818161087c015281816108a901526109ef0152600081816102c101528181610385015261068b01526110eb6000f3fe6080604052600436106100f35760003560e01c8063b286de761161008a578063df2a26e911610059578063df2a26e9146102e3578063f379dfd014610303578063f3fef3a314610323578063f8b2cb4f1461034357600080fd5b8063b286de761461025a578063b33bfa7c1461027a578063c311d0491461028f578063c45a0155146102af57600080fd5b806372b8d470116100c657806372b8d470146101b95780639049f9d2146101e6578063ad5c464814610206578063adc9772e1461023a57600080fd5b80631228cbee146100f85780633bb66a7b146101355780636845478f146101705780636ecc20da146101a4575b600080fd5b34801561010457600080fd5b50610118610113366004610eff565b610363565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014157600080fd5b50610162610150366004610eff565b60006020819052908152604090205481565b60405190815260200161012c565b34801561017c57600080fd5b506101187f000000000000000000000000000000000000000000000000000000000000000081565b6101b76101b2366004610f23565b6103f8565b005b3480156101c557600080fd5b506101626101d4366004610eff565b60016020526000908152604090205481565b3480156101f257600080fd5b506101b7610201366004610eff565b6105f2565b34801561021257600080fd5b506101187f000000000000000000000000000000000000000000000000000000000000000081565b34801561024657600080fd5b506101b7610255366004610f3c565b6106fd565b34801561026657600080fd5b506101b7610275366004610eff565b6107c4565b34801561028657600080fd5b506101b7610877565b34801561029b57600080fd5b506101b76102aa366004610f23565b6108a2565b3480156102bb57600080fd5b506101187f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ef57600080fd5b506101626102fe366004610f68565b610ae3565b34801561030f57600080fd5b5061016261031e366004610f68565b610b8a565b34801561032f57600080fd5b506101b761033e366004610f3c565b610bc8565b34801561034f57600080fd5b5061016261035e366004610eff565b610c39565b60405163bbe4f6db60e01b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063bbe4f6db90602401602060405180830381865afa1580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f29190610fa1565b92915050565b60006104237f0000000000000000000000000000000000000000000000000000000000000000610363565b90506001600160a01b0381166104545760405162461bcd60e51b815260040161044b90610fbe565b60405180910390fd5b600082116104a45760405162461bcd60e51b815260206004820152601c60248201527f4d757374207374616b65206d6f7265207468616e203020657468657200000000604482015260640161044b565b813410156104f45760405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e742045746865722073656e74000000000000000000604482015260640161044b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561054f57600080fd5b505af1158015610563573d6000803e3d6000fd5b5050336000908152600160205260408120805487955090935090915061058a908490610ffc565b9091555050604051624f718360e91b8152600481018390523360248201526001600160a01b03821690639ee3060090604401600060405180830381600087803b1580156105d657600080fd5b505af11580156105ea573d6000803e3d6000fd5b505050505050565b60006105fd82610363565b90506001600160a01b038116156106445760405162461bcd60e51b815260206004820152600b60248201526a504f4f4c5f45584953545360a81b604482015260640161044b565b60405163e343361560e01b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063e3433615906044016020604051808303816000875af11580156106d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f89190610fa1565b505050565b600061070883610363565b90506001600160a01b03811661072d57610721836105f2565b61072a83610363565b90505b6001600160a01b0381166107535760405162461bcd60e51b815260040161044b90610fbe565b61075f83333085610ca4565b604051624f718360e91b8152600481018390523360248201526001600160a01b03821690639ee30600906044015b600060405180830381600087803b1580156107a757600080fd5b505af11580156107bb573d6000803e3d6000fd5b50505050505050565b60006107cf82610363565b90506001600160a01b0381166107f75760405162461bcd60e51b815260040161044b9061100f565b60006108038333610ae3565b90506000811161084b5760405162461bcd60e51b81526020600482015260136024820152724e4f5f5245574152445f544f5f52454445454d60681b604482015260640161044b565b60405163d279c19160e01b81523360048201526001600160a01b0383169063d279c1919060240161078d565b6108a07f00000000000000000000000000000000000000000000000000000000000000006107c4565b565b60006108cd7f0000000000000000000000000000000000000000000000000000000000000000610363565b90506001600160a01b0381166108f55760405162461bcd60e51b815260040161044b90610fbe565b336000908152600160205260409020548211156109545760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768207374616b6564204574686572000000000000000000604482015260640161044b565b604051635f258bb960e11b8152600481018390523360248201526001600160a01b0382169063be4b177290604401600060405180830381600087803b15801561099c57600080fd5b505af11580156109b0573d6000803e3d6000fd5b505033600090815260016020526040812080548694509092506109d4908490611038565b9091555050604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610a3b57600080fd5b505af1158015610a4f573d6000803e3d6000fd5b50506040516000925033915084908381818185875af1925050503d8060008114610a95576040519150601f19603f3d011682016040523d82523d6000602084013e610a9a565b606091505b50509050806106f85760405162461bcd60e51b8152602060048201526015602482015274115d1a195c881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161044b565b600080610aef84610363565b90506001600160a01b038116610b175760405162461bcd60e51b815260040161044b9061100f565b6040516316ba6bf360e01b81526001600160a01b0384811660048301528216906316ba6bf3906024015b602060405180830381865afa158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b82919061104b565b949350505050565b600080610b9683610363565b6040516326d352ab60e11b81526001600160a01b03868116600483015291925090821690634da6a55690602401610b41565b6000610bd383610363565b90506001600160a01b038116610bfb5760405162461bcd60e51b815260040161044b9061100f565b610c06833384610dcc565b604051635f258bb960e11b8152600481018390523360248201526001600160a01b0382169063be4b17729060440161078d565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610c80573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f2919061104b565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610d089190611064565b6000604051808303816000865af19150503d8060008114610d45576040519150601f19603f3d011682016040523d82523d6000602084013e610d4a565b606091505b5091509150818015610d74575080511580610d74575080806020019051810190610d749190611093565b6105ea5760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b606482015260840161044b565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610e289190611064565b6000604051808303816000865af19150503d8060008114610e65576040519150601f19603f3d011682016040523d82523d6000602084013e610e6a565b606091505b5091509150818015610e94575080511580610e94575080806020019051810190610e949190611093565b610ee05760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c454400604482015260640161044b565b5050505050565b6001600160a01b0381168114610efc57600080fd5b50565b600060208284031215610f1157600080fd5b8135610f1c81610ee7565b9392505050565b600060208284031215610f3557600080fd5b5035919050565b60008060408385031215610f4f57600080fd5b8235610f5a81610ee7565b946020939093013593505050565b60008060408385031215610f7b57600080fd5b8235610f8681610ee7565b91506020830135610f9681610ee7565b809150509250929050565b600060208284031215610fb357600080fd5b8151610f1c81610ee7565b6020808252600e908201526d1413d3d317d393d517d1561254d560921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156103f2576103f2610fe6565b6020808252600f908201526e504f4f4c5f4e4f545f45584953545360881b604082015260600190565b818103818111156103f2576103f2610fe6565b60006020828403121561105d57600080fd5b5051919050565b6000825160005b81811015611085576020818601810151858301520161106b565b506000920191825250919050565b6000602082840312156110a557600080fd5b81518015158114610f1c57600080fdfea2646970667358221220ccf113a350ef64ef3289c39421d6feded749a3b494b12ffa8c4f7ec0d450cb5d64736f6c63430008130033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8031,
        "contract": "contracts/router/StakingPoolRouter.sol:StakingPoolRouter",
        "label": "getETHBalance",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8035,
        "contract": "contracts/router/StakingPoolRouter.sol:StakingPoolRouter",
        "label": "stakedETH",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}