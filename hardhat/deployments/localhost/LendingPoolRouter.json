{
  "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "borrowETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "borrowToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getBorrowAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getLendAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        }
      ],
      "name": "getRepayAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "getWithdrawAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repayETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repayToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x366229d807b18bd06bf29e51107e5f8405b7677e08d9c16acdef5b10051ef5c4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
    "transactionIndex": 0,
    "gasUsed": "1235344",
    "logsBloom": "0x
    "blockHash": "0x294a37dbfb61fc098c6e9b67a770259d4eeb825af45a83e652b945675bb16266",
    "transactionHash": "0x366229d807b18bd06bf29e51107e5f8405b7677e08d9c16acdef5b10051ef5c4",
    "logs": [],
    "blockNumber": 13,
    "cumulativeGasUsed": "1235344",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
    "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853"
  ],
  "numDeployments": 1,
  "solcInputHash": "130e622908746bdf89c1fdb43fcf5faf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"borrowETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"borrowToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getBorrowAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getLendAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"getRepayAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"getWithdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/router/LendingPoolRouter.sol\":\"LendingPoolRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function balanceOf(address _owner) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x239f47b2f966a01ac0f60503dec17b3d50e7bd5aaaea4f3fe8c79909d9da3f90\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/ILendingPool.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface ILendingPool {\\n    struct Amount {\\n        uint256 amount;\\n        uint256 start;\\n    }\\n\\n    function lendAmount(address _user) external view returns (Amount memory);\\n\\n    function earnedInterest(address _user) external view returns (uint256);\\n\\n    function borrowAmount(address _user) external view returns (Amount memory);\\n\\n    function payInterest(address user) external view returns (uint256);\\n\\n    function lenders(address _user) external view returns (bool);\\n\\n    function borrowers(address _user) external view returns (bool);\\n\\n    function deposit(uint256 _amount, address _user) external;\\n\\n    function borrow(uint256 _amount, address _user) external;\\n\\n    function repay(address _user, uint256 _amount) external;\\n\\n    function withdraw(address _user, uint256 _amount) external;\\n\\n    function liquidate(address _user, uint256 _amount) external;\\n\\n    function calculateRepayAmount(\\n        address _user,\\n        uint256 _amount\\n    ) external view returns (uint256);\\n\\n    function calculateWithdrawAmount(\\n        address _user,\\n        uint256 _amount\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf59db06fbbaec75cbb0eb6d81c32abeffaab6c1e49324b68d36f26a850b206f8\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/ILendingPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface ILendingPoolFactory {\\n    function getPool(address _token) external view returns (address);\\n\\n    function allPools() external view returns (address[] memory);\\n\\n    function allPoolsLength() external view returns (uint256);\\n\\n    function createPool(address _token) external returns (address);\\n}\\n\",\"keccak256\":\"0x6752f9bb0cdca01bd10b566a54f6c0ce83cb9fa80c896487bc87cbf9abf6b8b4\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IWETH {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Deposit(address indexed account, uint256 amount);\\n    event Withdrawal(address indexed account, uint256 amount);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address _owner) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x9c7c54a21c523011d772b7ddf932f95f5d70a7b10d4e755e13b049d51ad05c8b\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nlibrary TransferHelper {\\n    function safeApprove(address token, address to, uint256 value) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x095ea7b3, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: APPROVE_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransfer(address token, address to, uint256 value) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0xa9059cbb, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: TRANSFER_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: TRANSFER_FROM_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper: ETH_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x98073686d89bc283e6e98950435f46ae368af757a1cbe819b2e9a10ef077d174\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/router/LendingPoolRouter.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nimport \\\"../interfaces/ILendingPool.sol\\\";\\nimport \\\"../interfaces/ILendingPoolFactory.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/TransferHelper.sol\\\";\\n\\ncontract LendingPoolRouter {\\n    address public immutable factory;\\n    address public immutable WETH;\\n\\n    constructor(address _factory, address _WETH) {\\n        factory = _factory;\\n        WETH = _WETH;\\n    }\\n\\n    function getPoolAddress(address _token) public view returns (address pool) {\\n        pool = ILendingPoolFactory(factory).getPool(_token);\\n    }\\n\\n    function getBalance(address _token) public view returns (uint256 balance) {\\n        balance = IERC20(_token).balanceOf(address(this));\\n    }\\n\\n    function createPool(address _token) public {\\n        ILendingPoolFactory(factory).createPool(_token);\\n    }\\n\\n    function getRepayAmount(\\n        address _token,\\n        address _user,\\n        uint256 repayAmount\\n    ) public view returns (uint256 amount) {\\n        address pool = getPoolAddress(_token);\\n\\n        amount = ILendingPool(pool).calculateRepayAmount(_user, repayAmount);\\n    }\\n\\n    function getWithdrawAmount(\\n        address _token,\\n        address _user,\\n        uint256 withdrawAmount\\n    ) public view returns (uint256 amount) {\\n        address pool = getPoolAddress(_token);\\n\\n        amount = ILendingPool(pool).calculateWithdrawAmount(\\n            _user,\\n            withdrawAmount\\n        );\\n    }\\n\\n    function depositToken(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n\\n        if (pool != address(0)) {\\n            ILendingPool(pool).deposit(_amount, msg.sender);\\n        } else {\\n            createPool(_token);\\n            pool = getPoolAddress(_token);\\n\\n            ILendingPool(pool).deposit(_amount, msg.sender);\\n        }\\n    }\\n\\n    function withdrawToken(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        require(\\n            ILendingPool(pool).lendAmount(msg.sender).amount > 0,\\n            \\\"No amount to withdraw\\\"\\n        );\\n\\n        ILendingPool(pool).withdraw(msg.sender, _amount);\\n    }\\n\\n    function borrowToken(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        ILendingPool(pool).borrow(_amount, msg.sender);\\n    }\\n\\n    function repayToken(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        uint256 totalAmount = getRepayAmount(_token, msg.sender, _amount);\\n\\n        ILendingPool(pool).repay(msg.sender, totalAmount);\\n    }\\n\\n    function depositETH(uint256 _amount) public payable {\\n        require(_amount == msg.value, \\\"Invalid amount\\\");\\n\\n        address pool = getPoolAddress(WETH);\\n\\n        IWETH(WETH).deposit{value: msg.value}();\\n        TransferHelper.safeTransfer(WETH, pool, msg.value);\\n    }\\n\\n    function withdrawETH(uint256 _amount) public {\\n        address pool = getPoolAddress(WETH);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        uint256 totalAmount = getWithdrawAmount(WETH, msg.sender, _amount);\\n        ILendingPool(pool).withdraw(msg.sender, _amount);\\n\\n        IWETH(WETH).transferFrom(msg.sender, address(this), totalAmount);\\n        IWETH(WETH).withdraw(totalAmount);\\n\\n        TransferHelper.safeTransferETH(msg.sender, _amount);\\n    }\\n\\n    function borrowETH(uint256 _amount) public {\\n        address pool = getPoolAddress(WETH);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        ILendingPool(pool).borrow(_amount, msg.sender);\\n\\n        IWETH(WETH).approve(address(this), _amount);\\n        IWETH(WETH).transferFrom(address(this), msg.sender, _amount);\\n\\n        IWETH(WETH).withdraw(_amount);\\n\\n        TransferHelper.safeTransferETH(msg.sender, _amount);\\n    }\\n\\n    function repayETH(uint256 _amount) public payable {\\n        address pool = getPoolAddress(WETH);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        uint256 totalAmount = getRepayAmount(WETH, msg.sender, _amount);\\n\\n        require(msg.value >= totalAmount, \\\"Invalid amount\\\");\\n\\n        IWETH(WETH).deposit{value: msg.value}();\\n        TransferHelper.safeTransfer(WETH, msg.sender, totalAmount);\\n\\n        ILendingPool(pool).repay(msg.sender, _amount);\\n\\n        if (msg.value > totalAmount) {\\n            TransferHelper.safeTransferETH(msg.sender, msg.value - totalAmount);\\n        }\\n    }\\n\\n    function getLendAmount(\\n        address _token,\\n        address _user\\n    ) public view returns (uint256 amount) {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        amount = ILendingPool(pool).lendAmount(_user).amount;\\n    }\\n\\n    function getBorrowAmount(\\n        address _token,\\n        address _user\\n    ) public view returns (uint256 amount) {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        amount = ILendingPool(pool).borrowAmount(_user).amount;\\n    }\\n}\\n\",\"keccak256\":\"0xa3feedd9fcb1f5fd74a05fc8042d43a627ba10f7982bcb093706b336c06d9064\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161169a38038061169a83398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a051611569610131600039600081816102c8015281816105370152818161058a015281816105f50152818161066c015281816109240152818161094c015281816109c301528181610a5a01528181610b2001528181610bba01528181610c4601528181610ebf01528181610f1201528181610fbb01526110490152600081816102fc015281816103800152610cd301526115696000f3fe6080604052600436106100fe5760003560e01c80635a91b39c116100955780639e281a98116100645780639e281a9814610296578063ad5c4648146102b6578063c45a0155146102ea578063f14210a61461031e578063f8b2cb4f1461033e57600080fd5b80635a91b39c146102165780637b2af625146102365780639049f9d214610256578063987242e91461027657600080fd5b80632553c96b116100d15780632553c96b146101a3578063338b5dea146101c357806338bad5e5146101e35780635358fbda1461020357600080fd5b80631228cbee146101035780631ad58a2114610140578063214ea2181461016e5780632247463e14610190575b600080fd5b34801561010f57600080fd5b5061012361011e36600461131e565b61035e565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014c57600080fd5b5061016061015b366004611342565b6103f3565b604051908152602001610137565b34801561017a57600080fd5b5061018e610189366004611383565b61047e565b005b61018e61019e3660046113af565b610530565b3480156101af57600080fd5b506101606101be366004611342565b610712565b3480156101cf57600080fd5b5061018e6101de366004611383565b610757565b3480156101ef57600080fd5b506101606101fe3660046113c8565b610836565b61018e6102113660046113af565b6108dd565b34801561022257600080fd5b5061018e610231366004611383565b6109ed565b34801561024257600080fd5b5061018e6102513660046113af565b610a53565b34801561026257600080fd5b5061018e61027136600461131e565b610cb4565b34801561028257600080fd5b506101606102913660046113c8565b610d40565b3480156102a257600080fd5b5061018e6102b1366004611383565b610da2565b3480156102c257600080fd5b506101237f000000000000000000000000000000000000000000000000000000000000000081565b3480156102f657600080fd5b506101237f000000000000000000000000000000000000000000000000000000000000000081565b34801561032a57600080fd5b5061018e6103393660046113af565b610eb8565b34801561034a57600080fd5b5061016061035936600461131e565b6110b7565b60405163bbe4f6db60e01b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063bbe4f6db90602401602060405180830381865afa1580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed9190611401565b92915050565b6000806103ff8561035e565b604051634722a53160e01b81526001600160a01b0386811660048301526024820186905291925090821690634722a531906044015b602060405180830381865afa158015610451573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610475919061141e565b95945050505050565b60006104898361035e565b90506001600160a01b0381166104ba5760405162461bcd60e51b81526004016104b190611437565b60405180910390fd5b60006104c7843385610712565b604051630450cfaf60e31b8152336004820152602481018290529091506001600160a01b038316906322867d7890604401600060405180830381600087803b15801561051257600080fd5b505af1158015610526573d6000803e3d6000fd5b5050505050505050565b600061055b7f000000000000000000000000000000000000000000000000000000000000000061035e565b90506001600160a01b0381166105835760405162461bcd60e51b81526004016104b190611437565b60006105b07f00000000000000000000000000000000000000000000000000000000000000003385610712565b9050803410156105f35760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b60448201526064016104b1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b50505050506106927f00000000000000000000000000000000000000000000000000000000000000003383611122565b604051630450cfaf60e31b8152336004820152602481018490526001600160a01b038316906322867d7890604401600060405180830381600087803b1580156106da57600080fd5b505af11580156106ee573d6000803e3d6000fd5b505050508034111561070d5761070d336107088334611464565b61123d565b505050565b60008061071e8561035e565b60405163aa1970df60e01b81526001600160a01b038681166004830152602482018690529192509082169063aa1970df90604401610434565b60006107628361035e565b90506001600160a01b038116156107d957604051636e553f6560e01b8152600481018390523360248201526001600160a01b03821690636e553f65906044015b600060405180830381600087803b1580156107bc57600080fd5b505af11580156107d0573d6000803e3d6000fd5b50505050505050565b6107e283610cb4565b6107eb8361035e565b604051636e553f6560e01b8152600481018490523360248201529091506001600160a01b03821690636e553f6590604401600060405180830381600087803b1580156107bc57600080fd5b6000806108428461035e565b90506001600160a01b03811661086a5760405162461bcd60e51b81526004016104b190611437565b604051638d113a7f60e01b81526001600160a01b038481166004830152821690638d113a7f906024015b6040805180830381865afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190611485565b51949350505050565b34811461091d5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b60448201526064016104b1565b60006109487f000000000000000000000000000000000000000000000000000000000000000061035e565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156109a557600080fd5b505af11580156109b9573d6000803e3d6000fd5b50505050506109e97f00000000000000000000000000000000000000000000000000000000000000008234611122565b5050565b60006109f88361035e565b90506001600160a01b038116610a205760405162461bcd60e51b81526004016104b190611437565b604051630967fa2960e31b8152600481018390523360248201526001600160a01b03821690634b3fd148906044016107a2565b6000610a7e7f000000000000000000000000000000000000000000000000000000000000000061035e565b90506001600160a01b038116610aa65760405162461bcd60e51b81526004016104b190611437565b604051630967fa2960e31b8152600481018390523360248201526001600160a01b03821690634b3fd14890604401600060405180830381600087803b158015610aee57600080fd5b505af1158015610b02573d6000803e3d6000fd5b505060405163095ea7b360e01b8152306004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063095ea7b391506044016020604051808303816000875af1158015610b73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9791906114e2565b506040516323b872dd60e01b8152306004820152336024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f91906114e2565b50604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610c9257600080fd5b505af1158015610ca6573d6000803e3d6000fd5b505050506109e9338361123d565b604051634824fce960e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639049f9d2906024016020604051808303816000875af1158015610d1c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e99190611401565b600080610d4c8461035e565b90506001600160a01b038116610d745760405162461bcd60e51b81526004016104b190611437565b604051630e3c6d1360e11b81526001600160a01b038481166004830152821690631c78da2690602401610894565b6000610dad8361035e565b90506001600160a01b038116610dd55760405162461bcd60e51b81526004016104b190611437565b604051630e3c6d1360e11b81523360048201526000906001600160a01b03831690631c78da26906024016040805180830381865afa158015610e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3f9190611485565b5111610e855760405162461bcd60e51b81526020600482015260156024820152744e6f20616d6f756e7420746f20776974686472617760581b60448201526064016104b1565b60405163f3fef3a360e01b8152336004820152602481018390526001600160a01b0382169063f3fef3a3906044016107a2565b6000610ee37f000000000000000000000000000000000000000000000000000000000000000061035e565b90506001600160a01b038116610f0b5760405162461bcd60e51b81526004016104b190611437565b6000610f387f000000000000000000000000000000000000000000000000000000000000000033856103f3565b60405163f3fef3a360e01b8152336004820152602481018590529091506001600160a01b0383169063f3fef3a390604401600060405180830381600087803b158015610f8357600080fd5b505af1158015610f97573d6000803e3d6000fd5b50506040516323b872dd60e01b8152336004820152306024820152604481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506323b872dd91506064016020604051808303816000875af115801561100e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103291906114e2565b50604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561109557600080fd5b505af11580156110a9573d6000803e3d6000fd5b5050505061070d338461123d565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156110fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed919061141e565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161117e9190611504565b6000604051808303816000865af19150503d80600081146111bb576040519150601f19603f3d011682016040523d82523d6000602084013e6111c0565b606091505b50915091508180156111ea5750805115806111ea5750808060200190518101906111ea91906114e2565b6112365760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c45440060448201526064016104b1565b5050505050565b604080516000808252602082019092526001600160a01b0384169083906040516112679190611504565b60006040518083038185875af1925050503d80600081146112a4576040519150601f19603f3d011682016040523d82523d6000602084013e6112a9565b606091505b505090508061070d5760405162461bcd60e51b815260206004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201526213115160ea1b60648201526084016104b1565b6001600160a01b038116811461131b57600080fd5b50565b60006020828403121561133057600080fd5b813561133b81611306565b9392505050565b60008060006060848603121561135757600080fd5b833561136281611306565b9250602084013561137281611306565b929592945050506040919091013590565b6000806040838503121561139657600080fd5b82356113a181611306565b946020939093013593505050565b6000602082840312156113c157600080fd5b5035919050565b600080604083850312156113db57600080fd5b82356113e681611306565b915060208301356113f681611306565b809150509250929050565b60006020828403121561141357600080fd5b815161133b81611306565b60006020828403121561143057600080fd5b5051919050565b602080825260139082015272141bdbdb08191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b818103818111156103ed57634e487b7160e01b600052601160045260246000fd5b60006040828403121561149757600080fd5b6040516040810181811067ffffffffffffffff821117156114c857634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b6000602082840312156114f457600080fd5b8151801515811461133b57600080fd5b6000825160005b81811015611525576020818601810151858301520161150b565b50600092019182525091905056fea264697066735822122049cac18b75bd1a573a62ad7d35becdfda7d19d5181fed33d365d155a4cff17c264736f6c63430008130033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}