{
  "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "borrowETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "borrowToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getBorrowAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getLendAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getRepayAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTotalLendAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "getWithdrawAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repayETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repayToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa74ae7cb7965678021b8b145c794dcdab819459f591d0b28872b717efd08001f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
    "transactionIndex": 0,
    "gasUsed": "1398331",
    "logsBloom": "0x
    "blockHash": "0x6d147125bb9344bf1e53101574aa3d6042d460413f6cff29e50997f7fd223e1a",
    "transactionHash": "0xa74ae7cb7965678021b8b145c794dcdab819459f591d0b28872b717efd08001f",
    "logs": [],
    "blockNumber": 13,
    "cumulativeGasUsed": "1398331",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
    "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853"
  ],
  "numDeployments": 1,
  "solcInputHash": "ba193ebc812ae7cb80afca5f7fc7624f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"borrowETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"borrowToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getBorrowAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getLendAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRepayAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTotalLendAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"getWithdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/router/LendingPoolRouter.sol\":\"LendingPoolRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function balanceOf(address _owner) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x239f47b2f966a01ac0f60503dec17b3d50e7bd5aaaea4f3fe8c79909d9da3f90\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/ILendingPool.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface ILendingPool {\\n    function lendAmount(address _user) external view returns (uint256);\\n\\n    function earnedInterest(address _user) external view returns (uint256);\\n\\n    function borrowAmount(address _user) external view returns (uint256);\\n\\n    function paidInterest(address user) external view returns (uint256);\\n\\n    function lenders(address _user) external view returns (bool);\\n\\n    function borrowers(address _user) external view returns (bool);\\n\\n    function deposit(uint256 _amount, address _user) external;\\n\\n    function borrow(uint256 _amount, address _user) external;\\n\\n    function repay(address _user, uint256 _amount) external;\\n\\n    function withdraw(address _user, uint256 _amount) external;\\n\\n    function liquidate(address _user, uint256 _amount) external;\\n\\n    function getCurrentTotalSupply() external view returns (uint256);\\n\\n    function calculateRepayAmount(\\n        address _user,\\n        uint256 _amount\\n    ) external view returns (uint256);\\n\\n    function calculateWithdrawAmount(\\n        address _user,\\n        uint256 _amount\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xef323ae21a39392ddff865171bef0e46d5843b98545bf0a694d34d3ef9b37c4c\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/ILendingPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface ILendingPoolFactory {\\n    function getLendingPool(address _token) external view returns (address);\\n\\n    function allPools() external view returns (address[] memory);\\n\\n    function allPoolsLength() external view returns (uint256);\\n\\n    function createPool(address _token) external returns (address);\\n}\\n\",\"keccak256\":\"0x69b5f44d06ec80151e04aa7b412da6906e4d5663ee22c6d37bac8a5bd0bf24aa\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\ninterface IWETH {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Deposit(address indexed account, uint256 amount);\\n    event Withdrawal(address indexed account, uint256 amount);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address _owner) external view returns (uint256);\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    ) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x9c7c54a21c523011d772b7ddf932f95f5d70a7b10d4e755e13b049d51ad05c8b\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nlibrary TransferHelper {\\n    function safeApprove(address token, address to, uint256 value) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x095ea7b3, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: APPROVE_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransfer(address token, address to, uint256 value) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0xa9059cbb, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: TRANSFER_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"TransferHelper: TRANSFER_FROM_FAILED\\\"\\n        );\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper: ETH_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x98073686d89bc283e6e98950435f46ae368af757a1cbe819b2e9a10ef077d174\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/router/LendingPoolRouter.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nimport \\\"../interfaces/ILendingPool.sol\\\";\\nimport \\\"../interfaces/ILendingPoolFactory.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/TransferHelper.sol\\\";\\n\\ncontract LendingPoolRouter {\\n    address public immutable factory;\\n    address public immutable WETH;\\n\\n    constructor(address _factory, address _WETH) {\\n        factory = _factory;\\n        WETH = _WETH;\\n    }\\n\\n    function getPoolAddress(address _token) public view returns (address pool) {\\n        pool = ILendingPoolFactory(factory).getLendingPool(_token);\\n    }\\n\\n    function getBalance(address _token) public view returns (uint256 balance) {\\n        balance = IERC20(_token).balanceOf(address(this));\\n    }\\n\\n    function createPool(address _token) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool == address(0), \\\"Pool exists\\\");\\n\\n        ILendingPoolFactory(factory).createPool(_token);\\n    }\\n\\n    function depositToken(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n\\n        if (pool == address(0)) {\\n            createPool(_token);\\n            pool = getPoolAddress(_token);\\n        }\\n\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        TransferHelper.safeTransferFrom(\\n            _token,\\n            msg.sender,\\n            address(this),\\n            _amount\\n        );\\n\\n        ILendingPool(pool).deposit(_amount, msg.sender);\\n    }\\n\\n    function withdrawToken(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        require(\\n            ILendingPool(pool).lendAmount(msg.sender) > 0,\\n            \\\"No amount to withdraw\\\"\\n        );\\n\\n        TransferHelper.safeTransfer(_token, msg.sender, _amount);\\n\\n        ILendingPool(pool).withdraw(msg.sender, _amount);\\n    }\\n\\n    function borrowToken(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        TransferHelper.safeTransfer(_token, msg.sender, _amount);\\n\\n        ILendingPool(pool).borrow(_amount, msg.sender);\\n    }\\n\\n    function repayToken(address _token, uint256 _amount) public {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        uint256 totalRepaymentAmount = getRepayAmount(_token, msg.sender);\\n\\n        require(_amount > 0, \\\"Invalid amount\\\");\\n\\n        require(_amount <= totalRepaymentAmount, \\\"Invalid amount\\\");\\n\\n        TransferHelper.safeTransferFrom(\\n            _token,\\n            msg.sender,\\n            address(this),\\n            _amount\\n        );\\n\\n        ILendingPool(pool).repay(msg.sender, _amount);\\n    }\\n\\n    function depositETH(uint256 _amount) public payable {\\n        require(_amount == msg.value, \\\"Invalid amount\\\");\\n\\n        address pool = getPoolAddress(WETH);\\n\\n        IWETH(WETH).deposit{value: msg.value}();\\n        TransferHelper.safeTransfer(WETH, pool, msg.value);\\n    }\\n\\n    function withdrawETH(uint256 _amount) public {\\n        address pool = getPoolAddress(WETH);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        uint256 totalAmount = getWithdrawAmount(WETH, msg.sender, _amount);\\n        ILendingPool(pool).withdraw(msg.sender, _amount);\\n\\n        IWETH(WETH).transferFrom(msg.sender, address(this), totalAmount);\\n        IWETH(WETH).withdraw(totalAmount);\\n\\n        TransferHelper.safeTransferETH(msg.sender, _amount);\\n    }\\n\\n    function borrowETH(uint256 _amount) public {\\n        address pool = getPoolAddress(WETH);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        ILendingPool(pool).borrow(_amount, msg.sender);\\n\\n        IWETH(WETH).approve(address(this), _amount);\\n        IWETH(WETH).transferFrom(address(this), msg.sender, _amount);\\n\\n        IWETH(WETH).withdraw(_amount);\\n\\n        TransferHelper.safeTransferETH(msg.sender, _amount);\\n    }\\n\\n    function repayETH(uint256 _amount) public payable {\\n        address pool = getPoolAddress(WETH);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        uint256 totalAmount = getRepayAmount(WETH, msg.sender);\\n\\n        require(msg.value >= totalAmount, \\\"Invalid amount\\\");\\n\\n        IWETH(WETH).deposit{value: msg.value}();\\n        TransferHelper.safeTransfer(WETH, msg.sender, totalAmount);\\n\\n        ILendingPool(pool).repay(msg.sender, _amount);\\n\\n        if (msg.value > totalAmount) {\\n            TransferHelper.safeTransferETH(msg.sender, msg.value - totalAmount);\\n        }\\n    }\\n\\n    function getRepayAmount(\\n        address _token,\\n        address _user\\n    ) public view returns (uint256 amount) {\\n        address pool = getPoolAddress(_token);\\n\\n        uint256 borrowAmount = ILendingPool(pool).borrowAmount(_user);\\n        uint256 accruedInterest = ILendingPool(pool).calculateRepayAmount(\\n            _user,\\n            borrowAmount\\n        );\\n\\n        amount = borrowAmount + accruedInterest;\\n    }\\n\\n    function getWithdrawAmount(\\n        address _token,\\n        address _user,\\n        uint256 withdrawAmount\\n    ) public view returns (uint256 amount) {\\n        address pool = getPoolAddress(_token);\\n\\n        amount = ILendingPool(pool).calculateWithdrawAmount(\\n            _user,\\n            withdrawAmount\\n        );\\n    }\\n\\n    function getLendAmount(\\n        address _token,\\n        address _user\\n    ) public view returns (uint256 amount) {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        amount = ILendingPool(pool).lendAmount(_user);\\n    }\\n\\n    function getTotalLendAmount(\\n        address _token\\n    ) public view returns (uint256 amount) {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        amount = ILendingPool(pool).getCurrentTotalSupply();\\n    }\\n\\n    function getBorrowAmount(\\n        address _token,\\n        address _user\\n    ) public view returns (uint256 amount) {\\n        address pool = getPoolAddress(_token);\\n        require(pool != address(0), \\\"Pool does not exist\\\");\\n\\n        amount = ILendingPool(pool).borrowAmount(_user);\\n    }\\n}\\n\",\"keccak256\":\"0xe21331bdf1799b71369f258f0e4918caeb83a69760ce5a18f980933f12c1f88c\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200199938038062001999833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a05161185b6200013e600039600081816102b3015281816105ab015281816105fe01528181610647015281816106be015281816108f9015281816109210152818161099801528181610a3a01528181610b0001528181610b9a01528181610c26015281816110a2015281816110f50152818161119e015261122c0152600081816102e7015281816103ab0152610d05015261185b6000f3fe6080604052600436106101095760003560e01c80639049f9d211610095578063c45a015511610064578063c45a0155146102d5578063cfd138c314610309578063e597772914610329578063f14210a614610349578063f8b2cb4f1461036957600080fd5b80639049f9d214610241578063987242e9146102615780639e281a9814610281578063ad5c4648146102a157600080fd5b8063338b5dea116100dc578063338b5dea146101ae57806338bad5e5146101ce5780635358fbda146101ee5780635a91b39c146102015780637b2af6251461022157600080fd5b80631228cbee1461010e5780631ad58a211461014b578063214ea218146101795780632247463e1461019b575b600080fd5b34801561011a57600080fd5b5061012e610129366004611631565b610389565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015757600080fd5b5061016b61016636600461164e565b61041e565b604051908152602001610142565b34801561018557600080fd5b5061019961019436600461168f565b6104a8565b005b6101996101a93660046116bb565b6105a4565b3480156101ba57600080fd5b506101996101c936600461168f565b610764565b3480156101da57600080fd5b5061016b6101e93660046116d4565b61082c565b6101996101fc3660046116bb565b6108d3565b34801561020d57600080fd5b5061019961021c36600461168f565b6109c2565b34801561022d57600080fd5b5061019961023c3660046116bb565b610a33565b34801561024d57600080fd5b5061019961025c366004611631565b610c94565b34801561026d57600080fd5b5061016b61027c3660046116d4565b610d72565b34801561028d57600080fd5b5061019961029c36600461168f565b610dd4565b3480156102ad57600080fd5b5061012e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102e157600080fd5b5061012e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561031557600080fd5b5061016b610324366004611631565b610ef5565b34801561033557600080fd5b5061016b6103443660046116d4565b610f92565b34801561035557600080fd5b506101996103643660046116bb565b61109b565b34801561037557600080fd5b5061016b610384366004611631565b61129a565b604051630572bf5f60e01b81526001600160a01b0382811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690630572bf5f90602401602060405180830381865afa1580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610418919061170d565b92915050565b60008061042a85610389565b604051634722a53160e01b81526001600160a01b0386811660048301526024820186905291925090821690634722a53190604401602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f919061172a565b95945050505050565b60006104b383610389565b90506001600160a01b0381166104e45760405162461bcd60e51b81526004016104db90611743565b60405180910390fd5b60006104f08433610f92565b9050600083116105125760405162461bcd60e51b81526004016104db90611770565b808311156105325760405162461bcd60e51b81526004016104db90611770565b61053e84333086611305565b604051630450cfaf60e31b8152336004820152602481018490526001600160a01b038316906322867d7890604401600060405180830381600087803b15801561058657600080fd5b505af115801561059a573d6000803e3d6000fd5b5050505050505050565b60006105cf7f0000000000000000000000000000000000000000000000000000000000000000610389565b90506001600160a01b0381166105f75760405162461bcd60e51b81526004016104db90611743565b60006106237f000000000000000000000000000000000000000000000000000000000000000033610f92565b9050803410156106455760405162461bcd60e51b81526004016104db90611770565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156106a057600080fd5b505af11580156106b4573d6000803e3d6000fd5b50505050506106e47f00000000000000000000000000000000000000000000000000000000000000003383611435565b604051630450cfaf60e31b8152336004820152602481018490526001600160a01b038316906322867d7890604401600060405180830381600087803b15801561072c57600080fd5b505af1158015610740573d6000803e3d6000fd5b505050508034111561075f5761075f3361075a83346117ae565b611550565b505050565b600061076f83610389565b90506001600160a01b0381166107945761078883610c94565b61079183610389565b90505b6001600160a01b0381166107ba5760405162461bcd60e51b81526004016104db90611743565b6107c683333085611305565b604051636e553f6560e01b8152600481018390523360248201526001600160a01b03821690636e553f65906044015b600060405180830381600087803b15801561080f57600080fd5b505af1158015610823573d6000803e3d6000fd5b50505050505050565b60008061083884610389565b90506001600160a01b0381166108605760405162461bcd60e51b81526004016104db90611743565b604051638d113a7f60e01b81526001600160a01b038481166004830152821690638d113a7f906024015b602060405180830381865afa1580156108a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cb919061172a565b949350505050565b3481146108f25760405162461bcd60e51b81526004016104db90611770565b600061091d7f0000000000000000000000000000000000000000000000000000000000000000610389565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561097a57600080fd5b505af115801561098e573d6000803e3d6000fd5b50505050506109be7f00000000000000000000000000000000000000000000000000000000000000008234611435565b5050565b60006109cd83610389565b90506001600160a01b0381166109f55760405162461bcd60e51b81526004016104db90611743565b610a00833384611435565b604051630967fa2960e31b8152600481018390523360248201526001600160a01b03821690634b3fd148906044016107f5565b6000610a5e7f0000000000000000000000000000000000000000000000000000000000000000610389565b90506001600160a01b038116610a865760405162461bcd60e51b81526004016104db90611743565b604051630967fa2960e31b8152600481018390523360248201526001600160a01b03821690634b3fd14890604401600060405180830381600087803b158015610ace57600080fd5b505af1158015610ae2573d6000803e3d6000fd5b505060405163095ea7b360e01b8152306004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063095ea7b391506044016020604051808303816000875af1158015610b53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7791906117c1565b506040516323b872dd60e01b8152306004820152336024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610beb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0f91906117c1565b50604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610c7257600080fd5b505af1158015610c86573d6000803e3d6000fd5b505050506109be3383611550565b6000610c9f82610389565b90506001600160a01b03811615610ce65760405162461bcd60e51b815260206004820152600b60248201526a506f6f6c2065786973747360a81b60448201526064016104db565b604051634824fce960e11b81526001600160a01b0383811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639049f9d2906024016020604051808303816000875af1158015610d4e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075f919061170d565b600080610d7e84610389565b90506001600160a01b038116610da65760405162461bcd60e51b81526004016104db90611743565b604051630e3c6d1360e11b81526001600160a01b038481166004830152821690631c78da269060240161088a565b6000610ddf83610389565b90506001600160a01b038116610e075760405162461bcd60e51b81526004016104db90611743565b604051630e3c6d1360e11b81523360048201526000906001600160a01b03831690631c78da2690602401602060405180830381865afa158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e72919061172a565b11610eb75760405162461bcd60e51b81526020600482015260156024820152744e6f20616d6f756e7420746f20776974686472617760581b60448201526064016104db565b610ec2833384611435565b60405163f3fef3a360e01b8152336004820152602481018390526001600160a01b0382169063f3fef3a3906044016107f5565b600080610f0183610389565b90506001600160a01b038116610f295760405162461bcd60e51b81526004016104db90611743565b806001600160a01b031663c02ae7546040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8b919061172a565b9392505050565b600080610f9e84610389565b604051638d113a7f60e01b81526001600160a01b038581166004830152919250600091831690638d113a7f90602401602060405180830381865afa158015610fea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100e919061172a565b60405163aa1970df60e01b81526001600160a01b0386811660048301526024820183905291925060009184169063aa1970df90604401602060405180830381865afa158015611061573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611085919061172a565b905061109181836117e3565b9695505050505050565b60006110c67f0000000000000000000000000000000000000000000000000000000000000000610389565b90506001600160a01b0381166110ee5760405162461bcd60e51b81526004016104db90611743565b600061111b7f0000000000000000000000000000000000000000000000000000000000000000338561041e565b60405163f3fef3a360e01b8152336004820152602481018590529091506001600160a01b0383169063f3fef3a390604401600060405180830381600087803b15801561116657600080fd5b505af115801561117a573d6000803e3d6000fd5b50506040516323b872dd60e01b8152336004820152306024820152604481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506323b872dd91506064016020604051808303816000875af11580156111f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121591906117c1565b50604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561127857600080fd5b505af115801561128c573d6000803e3d6000fd5b5050505061075f3384611550565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156112e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610418919061172a565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161136991906117f6565b6000604051808303816000865af19150503d80600081146113a6576040519150601f19603f3d011682016040523d82523d6000602084013e6113ab565b606091505b50915091508180156113d55750805115806113d55750808060200190518101906113d591906117c1565b61142d5760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b60648201526084016104db565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161149191906117f6565b6000604051808303816000865af19150503d80600081146114ce576040519150601f19603f3d011682016040523d82523d6000602084013e6114d3565b606091505b50915091508180156114fd5750805115806114fd5750808060200190518101906114fd91906117c1565b6115495760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c45440060448201526064016104db565b5050505050565b604080516000808252602082019092526001600160a01b03841690839060405161157a91906117f6565b60006040518083038185875af1925050503d80600081146115b7576040519150601f19603f3d011682016040523d82523d6000602084013e6115bc565b606091505b505090508061075f5760405162461bcd60e51b815260206004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201526213115160ea1b60648201526084016104db565b6001600160a01b038116811461162e57600080fd5b50565b60006020828403121561164357600080fd5b8135610f8b81611619565b60008060006060848603121561166357600080fd5b833561166e81611619565b9250602084013561167e81611619565b929592945050506040919091013590565b600080604083850312156116a257600080fd5b82356116ad81611619565b946020939093013593505050565b6000602082840312156116cd57600080fd5b5035919050565b600080604083850312156116e757600080fd5b82356116f281611619565b9150602083013561170281611619565b809150509250929050565b60006020828403121561171f57600080fd5b8151610f8b81611619565b60006020828403121561173c57600080fd5b5051919050565b602080825260139082015272141bdbdb08191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b6020808252600e908201526d125b9d985b1a5908185b5bdd5b9d60921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561041857610418611798565b6000602082840312156117d357600080fd5b81518015158114610f8b57600080fd5b8082018082111561041857610418611798565b6000825160005b8181101561181757602081860181015185830152016117fd565b50600092019182525091905056fea26469706673582212203bceb635c250e01b616dd372b10c58bac7d2f006f2ea714aa5cb9787cba0bae364736f6c63430008130033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}